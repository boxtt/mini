1、FMS-137：修改/找回支付密码后重新记录密码次数
说明：修改或者是重置密码后，将redis缓存中的相应用户的密码错误次数清空，重新进行计数。
2、FMS-135：红领巾钱包支付返回页面url变更
说明：如果是红领巾支付的情况下，不直接返回支付url，而是先将token和payurl通过get请求发送到h5页面，之后由h5页面跳转到实际支付页面
3、FMS-127：统计城市收支数据
说明：
本需求首先是需要每天10点将前一天的收支统计数据生成xls表格，之后通过邮件的形式发送给财务等邮箱。
其次需要将3月1日开始的所有城市字段同步到paycheck表，并将3月1号到20日的日收支统计数据通过邮件的形式发送给财务。
4、FMS-136 ：增加refund关联表来满足正常的退款流程。
本次重构退款流程后，如果业务端发起退款失败后，同一个退款id可以在各个业务端再次发起退款。
除此之外，如果是业务端发起退款后，退款失败的，可以通过线下的形式来手动发起退款，之后将同一个退款id的通知返回给业务端。
 5、FMS-140 ： 查找并解决，不同时间统计数据不一致问题。
问题原因：3月21日、3月25日统计3月20城市退款微信金额不一致。
问题原因查找：因为3月20日退款一笔订单，而21统计数据的时候，还并没有同步相应的城市信息（3月23日才同步完成），所以漏统计了一笔。
解决办法：重新统计了下3月21-3月24日信息。
6、FMS-119：支付端与用户端订单状态不一致
问题原因：1、订单为实时同步当前时间到之前一天的数据，之后没有更新操作。也就是说，虽然已经下单，但是此时还没有支付，同步完成后，订单状态实际上是中间状态，并没有因为后续支付完成而更改成最终状态。
解决办法：同步订单为下单前2小时-1小时的（此时订单已经完成支付，或者被取消），所以肯定是最终状态。
7、异常订单邮件通知。
针对支付端支付完成的订单，同步用户端数据，如果状态不一致的，发邮件通知技术等人，查找问题原因并进行解决。


1、分析并解决提现频繁出现失败问题
2、重构支付数据同步、统计流程。



备注：本周是我这边值得认真反思的一周：
1、不能单纯考虑如何快捷完成任务，而是要将后续的维护和扩展都考虑到，保证项目的可持续发展。
2、出现问题后在优化程序并不是最好的解决问题的办法，而是应该在需求设计的时候多花一些时间，一步到位。
3、出现问题找到问题真正原因，而不是绕过这个问题，否则永远也不可能真正明白问题出在哪了，也就没有进步。
4、正面面对自己的不足，认真吸纳别人的建议，不断完善自己。



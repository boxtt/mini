package xyz.hlj.paycenter.business.scheduler;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import xyz.hlj.paycenter.business.cache.PartnerCache;
import xyz.hlj.paycenter.business.dao.AccountDao;
import xyz.hlj.paycenter.business.dao.DepositDao;
import xyz.hlj.paycenter.business.dao.StatisticsDao;
import xyz.hlj.paycenter.business.dao.WithdrawDao;
import xyz.hlj.paycenter.business.model.Deposit;
import xyz.hlj.paycenter.business.model.Partner;
import xyz.hlj.paycenter.business.model.StatisticsInfo;
import xyz.hlj.paycenter.business.model.Withdraw;

import java.util.Date;


/**
 * 统计任务
 */
@Component
public class StatisticsJob {

    private static final Logger LOGGER = LoggerFactory.getLogger(StatisticsJob.class);

    @Autowired
    AccountDao accountDao;
    @Autowired
    WithdrawDao withdrawDao;
    @Autowired
    DepositDao depositDao;
    @Autowired
    StatisticsDao statisticsDao;
    @Autowired
    PartnerCache partnerCache;


    @Scheduled(cron = "0 0 0 * * ?")
    public void run(){

        LOGGER.info("执行数据统计..." );

        for(Partner partner : partnerCache.getAllPartner()){

            long end = System.currentTimeMillis();
            long start = end - 1000*60*60*24;

            int accountType = partner.getId();
            //账户总余额
            long total = accountDao.countMoney(accountType);
            //未处理  充值金额
            long depositAccepted = depositDao.countDepositMoney(accountType, start, end, Deposit.STATUS_ACCEPTED);
            //充值成功金额
            long depositSuccess = depositDao.countDepositMoney(accountType, start, end, Deposit.STATUS_SUCCESS);
            //未处理 提现申请金额
            long withdrawAccepted = withdrawDao.countWithdrawMoney(accountType,start,end, Withdraw.STATUS_ACCEPTED);
            //打款中  提现金额
            long withdrawTrying = withdrawDao.countWithdrawMoney(accountType,start,end, Withdraw.STATUS_TRYING);
            //打款成功金额
            long withdrawSuccess = withdrawDao.countWithdrawMoney(accountType,start,end, Withdraw.STATUS_SUCCESS);
            //打款失败金额
            long withdrawFail = withdrawDao.countWithdrawMoney(accountType,start,end, Withdraw.STATUS_FAIL);

            StatisticsInfo statistics = new StatisticsInfo();
            statistics.setAccountType(accountType);
            statistics.setStatisticsDate(new Date(start));
            statistics.setTotal(total);
            statistics.setDepositAccepted(depositAccepted);
            statistics.setDepositSuccess(depositSuccess);
            statistics.setWithdrawAccepted(withdrawAccepted);
            statistics.setWithdrawTrying(withdrawTrying);
            statistics.setWithdrawSuccess(withdrawSuccess);
            statistics.setWithdrawFail(withdrawFail);

            statisticsDao.save(statistics);

        }

    }

}
